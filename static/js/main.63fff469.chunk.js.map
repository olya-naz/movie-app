{"version":3,"sources":["assets/img/default-poster.jpg","assets/img/camera.svg","components/header/header.js","components/footer/footer.js","api/api-tmdb.js","components/top-movies/top-movies.js","components/vote/vote.js","components/movie-item/movie-item.js","components/loader/loader.js","components/error/error.js","components/movie-list/movie-list.js","components/pages/main-page.js","components/movie-details/movie-details.js","components/pages/movie-page.js","components/pagination/pagination.js","components/pages/search-page.js","components/app/app.js","index.js"],"names":["module","exports","Header","state","searchValue","inputRef","React","createRef","handleSubmit","e","preventDefault","length","setState","props","history","push","current","blur","handleInputChange","target","value","console","log","this","className","to","src","logo","alt","onSubmit","type","placeholder","ref","onChange","href","Component","withRouter","Footer","ApiTmdb","_API_KEY","_API_BASE","getAllMovies","id","a","getResource","res","results","map","getData","getMovie","item","getVideo","key","getSearchResults","query","getSearchPagination","page","title","overview","tagline","image","poster_path","backdrop","backdrop_path","date","release_date","vote","vote_average","genre","genres","url","fetch","ok","Error","status","json","TopMovies","_apiCall","movie","fetched","randomMovie","movieArr","Math","floor","random","then","response","timer","setInterval","clearInterval","bannerImg","style","backgroundImage","Vote","classNames","Number","Object","values","MovieItem","posterImage","defaultImg","Loader","MovieList","itemList","updateItem","prevProps","scroll","scrollToTop","smooth","duration","delay","isDynamic","data","MainPage","Helmet","MovieDetails","details","isOpen","videoSrc","openModal","getVideoSrc","catch","error","genreList","name","onClick","channel","videoId","onClose","MoviePage","Pagination","loading","getPage","total_pages","hash","window","location","i","split","indexOf","path","substring","prevButton","nextButton","SearchPage","getPagination","App","exact","render","match","params","n","component","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.63fff469.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-poster.8f2c6207.jpg\";","module.exports = __webpack_public_path__ + \"static/media/camera.89605246.svg\";","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport './header.scss';\nimport logo from '../../assets/img/camera.svg';\n\nclass Header extends Component {\n    state = {\n        searchValue: ''\n    };\n    inputRef = React.createRef();\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const { searchValue } = this.state;\n\n        if(searchValue.length === 0) {\n            return;\n        }\n\n        this.setState({\n            searchValue: ''\n        });\n\n        this.props.history.push(`/search/${searchValue}`);\n        this.inputRef.current.blur();\n    };\n\n    handleInputChange = (e) => {\n        this.setState({\n            searchValue: e.target.value\n        });\n\n        console.log(this.inputRef)\n    };\n\n    render() {\n        const { searchValue } = this.state;\n        return(\n            <header>\n                <div className=\"container\">\n                    <div className=\"logo-wr\">\n                        <Link to=\"/\">\n                            <img src={logo} alt=\"logo\"/>\n                            <span>MovieApp</span>\n                        </Link>\n                    </div>\n                    <div className=\"right-wr\">\n                        <div className=\"search-wr\">\n                            <form className=\"search-form\"\n                                  onSubmit={ this.handleSubmit }>\n                                <input type=\"text\"\n                                       value={ searchValue }\n                                       placeholder=\"Type to search...\"\n                                       className=\"search-text\"\n                                       ref={ this.inputRef }\n                                       onChange={ this.handleInputChange } />\n                                <button type=\"submit\"\n                                        className=\"search-button\">\n                                    <i className=\"icon-search\" />\n                                </button>\n                            </form>\n                        </div>\n                        <div className=\"git-link\">\n                            <a href=\"https://github.com/olya-naz/movie-app\"\n                               target=\"_blank\">\n                                <i className=\"icon-git-brands\" />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default withRouter(Header);","import React from 'react';\nimport './footer.scss';\n\nconst Footer = () => {\n    return(\n        <footer>\n            <div className=\"container\">\n                <div className=\"git-link\">\n                    <a href=\"https://github.com/olya-naz/movie-app\"\n                       target=\"_blank\">\n                        Fork me on <i className=\"icon-git-brands\" />\n                    </a>\n                </div>\n                <div className=\"tmdb-link\">\n                    <a href=\"https://www.themoviedb.org\">\n                        <img src=\"https://www.themoviedb.org/assets/2/v4/logos/powered-by-rectangle-green-dcada16968ed648d5eb3b36bbcfdd8cdf804f723dcca775c8f2bf4cea025aad6.svg\" alt=\"\"/>\n                    </a>\n                </div>\n            </div>\n        </footer>\n    )\n};\n\nexport default Footer;","export default class ApiTmdb {\n    _API_KEY = '?api_key=fcf247972b8f4e5c42eeb5aa3a0cfdd9';\n    _API_BASE = `https://api.themoviedb.org/3/`;\n\n    async getResource(url) {\n        const res = await fetch(`${this._API_BASE}${url}`);\n\n        if(!res.ok) {\n            throw new Error(`Could not fetch ${url}, \n                             received ${res.status}`);\n        }\n\n        return await res.json();\n    };\n\n    getAllMovies = async(id) => {\n        const res = await this.getResource(`movie/${id}${this._API_KEY}`);\n        return res.results.map(this.getData);\n    };\n    getMovie = async(id) => {\n        const item = await this.getResource(`movie/${id}${this._API_KEY}`);\n        return this.getData(item);\n    };\n    getVideo = async(id) => {\n        const res = await this.getResource(`movie/${id}${this._API_KEY}`);\n        return res.results[0].key;\n    };\n    getSearchResults = async(query) => {\n        const res = await this.getResource(`search/movie${this._API_KEY}&query=${query}`);\n        return res.results.map(this.getData);\n    };\n    getSearchPagination = async(query, page) => {\n        const res = await this.getResource(`search/movie${this._API_KEY}&query=${query}`);\n        return res;\n    };\n\n    getData = (item) => {\n        return {\n            id: item.id,\n            title: item.title,\n            overview: item.overview,\n            tagline: item.tagline,\n            image: item.poster_path,\n            backdrop: item.backdrop_path,\n            date: item.release_date,\n            vote: item.vote_average,\n            genre: item.genres\n        }\n    };\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ApiTmdb from \"../../api/api-tmdb\";\n\nimport './top-movies.scss';\n\nexport default class TopMovies extends Component {\n    _apiCall = new ApiTmdb();\n\n    state = {\n        movie: [],\n        fetched: false\n    };\n\n    randomMovie = () => {\n        const movieArr = [546554, 512200, 398978, 549053, 420809];\n        const id = movieArr[Math.floor(Math.random() * movieArr.length)];\n        this._apiCall.getMovie(`${id}`)\n            .then(response => this.setState({\n                movie: response,\n                fetched: true\n            }));\n    };\n\n    componentDidMount() {\n        this.randomMovie();\n\n        this.timer = setInterval(this.randomMovie, 7000);\n    };\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    render() {\n        const { id, backdrop, title } = this.state.movie;\n        const bannerImg = this.state.fetched ? `https://image.tmdb.org/t/p/original/${backdrop}` : null;\n\n        return(\n            <div className=\"top-rank-movie-block\">\n                <Link to={`/movie/${id}`}\n                      style={{ backgroundImage: `url(${bannerImg})` }} >\n                    <div className=\"content-wr\">\n                        <div className=\"container\">\n                            <h3>{title}</h3>\n                            <div className=\"button-link\"><button>More info</button></div>\n                        </div>\n                    </div>\n                </Link>\n            </div>\n        )\n    };\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './vote.scss';\n\nconst Vote = ({ vote }) => {\n    let classNames = ['vote'];\n\n    if(Number(Object.values({vote})) > 6.9) {\n        classNames += ' hight';\n    } else if(Number(Object.values({vote})) > 3.9) {\n        classNames += ' middle';\n    }\n\n    return(\n        <>\n            { vote > 0 && (\n                <div className={classNames}>\n                    <i className=\"icon-star-solid\" />\n                    {vote}\n                </div>\n            )}\n        </>\n    )\n};\n\nexport default Vote;\n\nVote.propTypes = {\n    vote: PropTypes.number\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Vote from '../vote/vote'\n\nimport './movie-item.scss';\nimport defaultImg from \"../../assets/img/default-poster.jpg\";\n\nconst MovieItem = ({ id, title, image, vote }) => {\n    const posterImage = image ? `https://image.tmdb.org/t/p/w342/${image}` : defaultImg;\n\n    return(\n        <div className=\"movie-item\">\n            <Link to={`/movie/${id}`} >\n                <figure>\n                    <img src={posterImage} alt={`${title} img`}/>\n                    <figcaption>{title}</figcaption>\n                </figure>\n            </Link>\n            <Vote vote={vote} />\n        </div>\n    )\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    image: PropTypes.string,\n    vote: PropTypes.number,\n};","import React from 'react';\n\nimport './loader.scss';\n\nconst Loader = () => {\n    return(\n        <div className=\"loader\">\n            <div className=\"circle circle-1\"></div>\n            <div className=\"circle circle-2\"></div>\n        </div>\n    )\n};\n\nexport default Loader;","import React from 'react';\n\nimport './error.scss';\n\nconst Error = () => {\n    return(\n        <div className=\"error\">\n            <div className=\"title\">Ooops!</div>\n            <p>Couldn't find that. Try something else.</p>\n        </div>\n    )\n};\n\nexport default Error;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { animateScroll as scroll } from 'react-scroll';\nimport MovieItem from \"../movie-item/movie-item\";\nimport Loader from \"../loader/loader\";\nimport Error from \"../error/error\";\n\nimport './movie-list.scss';\n\nexport default class MovieList extends React.Component {\n    static propTypes = {\n        url: PropTypes.string.isRequired,\n        getData: PropTypes.func.isRequired,\n        title: PropTypes.string\n    };\n\n    state = {\n        itemList: [],\n        fetched: false\n    };\n\n    componentDidMount() {\n        this.updateItem();\n    };\n\n    componentDidUpdate(prevProps) {\n        if (this.props.url !== prevProps.url) {\n            this.updateItem();\n\n            scroll.scrollToTop({\n                smooth: true,\n                duration: 500,\n                delay: 0,\n                isDynamic: true,\n            });\n        }\n    };\n\n    updateItem() {\n        const { getData, url } = this.props;\n        if (!url) {\n            return;\n        }\n\n        getData(url)\n            .then(response => this.setState({\n                itemList: response,\n                fetched: true\n            }));\n    }\n    render() {\n        const { itemList, fetched } = this.state;\n        const { title } = this.props;\n\n        const data = itemList.map(item => {\n            const { id } = item;\n\n            return (\n                <MovieItem key={ id }\n                           { ...item } />\n            );\n        });\n\n        if(fetched) {\n            return(\n                <>\n                    <div className=\"movie-list\">\n                        <div className=\"container\">\n                            <h2>{ title }</h2>\n                            { data.length ? (\n                                <div className=\"movie-list-wr\">\n                                    { data }\n                                </div>)\n                                : <Error /> }\n                        </div>\n                    </div>\n                </>\n            );\n        } else {\n            return(\n                <Loader />\n            )\n        }\n    }\n};","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport TopMovies from \"../top-movies/top-movies\";\nimport MovieList from \"../movie-list/movie-list\";\n\nconst MainPage = ({ getData }) => {\n    return(\n        <>\n            <Helmet>\n                <title>MovieApp</title>\n            </Helmet>\n            <TopMovies />\n            <MovieList getData={ getData }\n                       url=\"popular\"\n                       title='Popular today:' />\n        </>\n    )\n};\n\nexport default MainPage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { animateScroll as scroll } from 'react-scroll';\nimport ModalVideo from 'react-modal-video';\nimport ApiTmdb from \"../../api/api-tmdb\";\nimport Loader from \"../loader/loader\";\nimport Vote from \"../vote/vote\";\n\nimport './movie-details.scss';\nimport './modal-video.scss';\nimport defaultImg from '../../assets/img/default-poster.jpg';\n\nexport default class MovieDetails extends Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n    };\n\n    _apiCall = new ApiTmdb();\n\n    state = {\n        details: [],\n        fetched: false,\n        isOpen: false,\n        videoSrc: null\n    };\n\n    openModal = () => {\n        this.setState({\n            isOpen: true\n        });\n    };\n\n    componentDidMount() {\n        this.updateItem();\n        this.getVideoSrc();\n\n        scroll.scrollToTop({\n            smooth: true,\n            duration: 0,\n            delay: 0,\n            isDynamic: true,\n        });\n    };\n    componentDidUpdate(prevProps) {\n        if (this.props.id !== prevProps.id) {\n            this.updateItem();\n            this.getVideoSrc();\n        }\n    };\n\n    updateItem() {\n        const {id} = this.props;\n\n        this._apiCall.getMovie(id)\n            .then(response => this.setState({\n                details: response,\n                fetched: true\n            }));\n    }\n\n    getVideoSrc = () => {\n        this._apiCall.getVideo(`${this.props.id}/videos`)\n            .then(response => this.setState({\n                videoSrc: response\n            }))\n            .catch( error => console.error(error));\n    };\n\n    render() {\n        const { fetched, videoSrc } = this.state;\n        const { image, backdrop, title, tagline, overview, genre, date, vote } = this.state.details;\n\n        const bannerImg = (fetched && backdrop) ? `https://image.tmdb.org/t/p/original/${backdrop}` : null;\n        const posterImage = (fetched && image) ? `https://image.tmdb.org/t/p/w500/${image}` : defaultImg;\n\n        const genreList = this.state.fetched ?\n                                    genre.map(item => {return <li key={item.id}>{item.name}</li>})\n                                    : null;\n\n        if(fetched) {\n            return(\n                <div className=\"movie-details\">\n                    <Helmet>\n                        <title>{`${title} — MovieApp`}</title>\n                    </Helmet>\n                    <div className=\"backdrop-wr\">\n                        <div className=\"backdrop-inner\" style={{backgroundImage: `url(${bannerImg})`}} />\n                    </div>\n                    <div className=\"movie-details-inner\">\n                        <div className=\"poster-wr hidden-sm hidden-xs\">\n                            <img src={posterImage} alt={`${title} img`}/>\n                        </div>\n                        <div className=\"details-wr\">\n                            <div className=\"top-block\">\n                                <h1>{title}</h1>\n                                { tagline && <blockquote>\"{tagline}\"</blockquote> }\n                            </div>\n                            <Vote vote={vote} />\n                            { date && <p><span className=\"descr-title\">Date:</span> {date}</p> }\n                            <p>\n                                <span className=\"descr-title\">Overview:</span> {overview}\n                            </p>\n                            <ul>\n                                <li>\n                                    <span className=\"descr-title\">Genres:</span>\n                                </li>\n                                { genreList }\n                            </ul>\n                            { videoSrc && (\n                                <button className=\"movie-button\"\n                                        onClick={ this.openModal } >\n                                    <i className=\"icon-play\" />\n                                    <span>Watch Trailer</span>\n                                </button>\n                            )}\n                        </div>\n                    </div>\n\n                    <ModalVideo channel='youtube'\n                                isOpen={this.state.isOpen}\n                                videoId={this.state.videoSrc}\n                                onClose={ () => this.setState({isOpen: false}) } />\n                </div>\n            )\n        } else {\n            return <Loader />\n        }\n    }\n};","import React from 'react';\nimport MovieDetails from \"../movie-details/movie-details\";\nimport MovieList from \"../movie-list/movie-list\";\n\nconst MoviePage = ({ id, getData }) => {\n    return(\n        <>\n            <MovieDetails id={id} />\n            <MovieList id={id}\n                       getData={ getData }\n                       url={`${id}/recommendations`}\n                       title='Recommended:' />\n        </>\n    )\n};\n\nexport default MoviePage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './pagination.scss';\n\nexport default class Pagination extends Component {\n    static propTypes = {\n        url: PropTypes.string.isRequired,\n        getData: PropTypes.func.isRequired\n    };\n\n    state = {\n        data: null,\n        loading: true\n    };\n    componentDidMount() {\n        this.getPage();\n    }\n    componentDidUpdate(prevProps) {\n        if(prevProps.url !== this.props.url) {\n            this.getPage();\n        }\n    }\n    getPage() {\n        const { getData, url } = this.props;\n\n        getData(url)\n            .then(response => this.setState({\n                data: response,\n                loading: false\n            }));\n    }\n\n    render() {\n        if(!this.state.loading) {\n            const { page, total_pages } = this.state.data;\n\n            let hash = window.location.hash;\n            hash = hash.split('#')[1];\n            const i = hash.indexOf('&');\n            const path = hash.substring(0, i !== -1 ? i : hash.length);\n\n            const prevButton = (page !== 1) ?\n                <Link to={`${path}&page=${page-1}`}\n                      className=\"prev-btn\">\n                    <i className=\"icon-left\"/> Prev page\n                </Link>\n                : null;\n            const nextButton = (page < total_pages) ?\n                <Link to={`${path}&page=${page+1}`}\n                      className=\"next-btn\">\n                    Next page <i className=\"icon-right\"/>\n                </Link>\n                : null;\n\n            return(\n                <div className=\"pagination\">\n                    <div className=\"container\">\n                        { prevButton }\n                        { nextButton }\n                    </div>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n}","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport MovieList from \"../movie-list/movie-list\";\nimport Pagination from \"../pagination/pagination\";\n\nconst SearchPage = ({ getData, getPagination, url, title }) => {\n    return(\n        <>\n            <Helmet>\n                <title>{`Search: ${url} — MovieApp`}</title>\n            </Helmet>\n            <MovieList getData={ getData }\n                       url={ url }\n                       title={`Search results: ${title}`} />\n            <Pagination getData={ getPagination }\n                        url={ url } />\n        </>\n    )\n};\n\nexport default SearchPage;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"../header/header\";\nimport Footer from '../footer/footer';\nimport MainPage from '../pages/main-page';\nimport MoviePage from '../pages/movie-page';\nimport SearchPage from \"../pages/search-page\";\nimport Error from \"../error/error\";\nimport ApiTmdb from \"../../api/api-tmdb\";\n\nimport '../../assets/styles/_base.scss';\n\nconst {\n    getAllMovies,\n    getSearchResults,\n    getSearchPagination\n} = new ApiTmdb();\n\nconst App = () => {\n    return(\n        <>\n            <Router>\n                <Header />\n                <main>\n                    <Switch>\n                        <Route path=\"/\"\n                               exact\n                               render={() => {\n                                   return <MainPage getData={ getAllMovies }/>\n                               }}/>\n\n                        <Route path=\"/movie/:id\"\n                               render={({ match }) => {\n                                   const { id } = match.params;\n                                   return <MoviePage id={ id }\n                                                     getData={ getAllMovies } />\n                               }} />\n\n                        <Route path=\"/search/:query\"\n                               render={({ match }) => {\n                                   const { query } = match.params;\n                                   const n = query.indexOf('&');\n                                   const title = query.substring(0, n !== -1 ? n : query.length);\n                                   return <SearchPage getData={ getSearchResults }\n                                                      getPagination={ getSearchPagination }\n                                                      url={ query }\n                                                      title={ title }/>\n                               }} />\n                        <Route component={ Error } />\n                    </Switch>\n                </main>\n                <Footer />\n            </Router>\n        </>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from \"./components/app/app\";\n\nReactDom.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}